xcversion(version: "12.5.1")
update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build for ios"
  lane :build do |options|
    setupCodeSigning(ENV["KEYCHAIN_PASSWORD"], ENV["CERTIFICATE_PASSWORD"], 'Certificates/MeetleteDevDistribution.mobileprovision', 'Certificates/Certificate.p12')

    # cocoapods(clean_install: true, use_bundle_exec: false, error_callback: true)
    api_key = app_store_connect_api_key(
    key_id: ENV["KEY_ID"],
    issuer_id: ENV["ISSUER_ID"],
    key_content: ENV["APPLE_KEY"],
    key_filepath: Certificates/AuthKey_R7Q9B859TM.p8,
    duration: 1200, # optional (maximum 1200)
    in_house: false, # optional but may be required if using match/sigh
    )

    increment_build_number(
      xcodeproj: './meetlete.xcodeproj'
    )
    # # new_version = get_version_number
    # # commit_version_bump(
    # #   message: "Deployed new build #{lane_context[SharedValues::BUILD_NUMBER]}",
    # #   xcodeproj: './meetlete.xcodeproj'
    # # )

    # push_to_git_remote(
    #    local_branch: 'main',  # optional, aliased by 'branch', default: 'master'
    #    remote_branch: 'main', # optional, default is set to local_branch
    # )

    # build_app(
    #  scheme: "meetlete", 
    #  configuration: 'Release'
    # )
    # Building the iOS app
    update_project_provisioning(
      profile: "Certificates/Meetlete_app_AppStore.mobileprovision",
      target_filter: "meetlete",
      code_signing_identity: "Apple Distribution: Meetlete, Inc. (8D8PW9FV6S)"
    )
    update_project_provisioning(
      profile: "Certificates/MeetleteOneSignalAppStore.mobileprovision",
      target_filter: "OneSignalNotificationServiceExtension",
      code_signing_identity: "Apple Distribution: Meetlete, Inc. (8D8PW9FV6S)"
    )
    gym(
      workspace: "./meetlete.xcworkspace",
      include_bitcode: false,
      include_symbols: true,
      silent: true,
      clean: true,
      scheme: "meetlete",
      export_method: "app-store",
      export_options: {
      provisioningProfiles: { 
        "com.meetlete.app" => "Meetlete app AppStore",
        "com.meetlete.app.OneSignalNotificationServiceExtension" => "Meetlete OneSignal AppStore"
      }
    }
    )

    upload_to_testflight(
     # skip_submission: true,
    apple_id: ENV["APP_ID"],
    api_key: api_key,
    skip_waiting_for_build_processing: true
    )
  end

  desc "Upload to testflight"
  lane :testflight_release_to_app_store do |options|
    build
  end

  # desc "Upload to production"
  # lane :production_release_to_app_store do |options|
  #   build
  #   upload_to_app_store(
  #     skip_screenshots: true,
  #     skip_metadata: true
  #   )
  # end
end

def setupCodeSigning(keychainPassword, certificatePassword, profilePath, certificatePath)
  create_keychain(
    name: "CI-TEST-11",
    password: keychainPassword,
    default_keychain: true,
    unlock: true,
    timeout: 3600,
    lock_when_sleeps: false
  )
  # install_provisioning_profile(path: profilePath)
  import_certificate(
    certificate_path: 'Certificates/Apple Development- HDWebSoft Mobile (5CAH25M52Q).p12',
    certificate_password: certificatePassword,
    keychain_name: "CI-TEST-11",
    keychain_password: keychainPassword
  )
  import_certificate(
    certificate_path: 'Certificates/Apple Distribution- Meetlete, Inc. (8D8PW9FV6S).p12',
    certificate_password: certificatePassword,
    keychain_name: "CI-TEST-11",
    keychain_password: keychainPassword
  )
  install_provisioning_profile(path: 'Certificates/Meetlete_app_Development.mobileprovision')
  install_provisioning_profile(path: 'Certificates/Meetlete_app_AdHoc.mobileprovision')
  install_provisioning_profile(path: 'Certificates/Meetlete_OneSignal_Development.mobileprovision')
  install_provisioning_profile(path: 'Certificates/Meetlete_OneSignal_AdHoc.mobileprovision')
  install_provisioning_profile(path: 'Certificates/Meetlete_OneSignal_AppStore.mobileprovision')
end
