default_platform(:ios)

platform :ios do
  desc "Build for ios"
  lane :build do |options|
    setupCodeSigning(ENV["KEYCHAIN_PASSWORD"], ENV["CERTIFICATE_PASSWORD"], 'Certificates/Meetlete_app_AdHoc.mobileprovision', 'Certificates/Apple Distribution- Meetlete, Inc. (8D8PW9FV6S).p12')

    cocoapods(clean_install: true, use_bundle_exec: false, error_callback: true)
    # api_key = app_store_connect_api_key(
    #   key_id: ENV["KEY_ID"],
    #   issuer_id: ENV["ISSUER_ID"],
    #   # key_filepath: "./AuthKey_BKDD3T7KH2.p8",
    #   key_content: ENV["APPLE_KEY"],
    #   duration: 1200, # optional (maximum 1200)
    #   in_house: false, # optional but may be required if using match/sigh
    # )

    # increment_build_number(
    #   xcodeproj: './meetlete.xcodeproj'
    # )
    # # new_version = get_version_number
    # # commit_version_bump(
    # #   message: "Deployed new build #{lane_context[SharedValues::BUILD_NUMBER]}",
    # #   xcodeproj: './meetlete.xcodeproj'
    # # )

    # push_to_git_remote(
    #    local_branch: 'main',  # optional, aliased by 'branch', default: 'master'
    #    remote_branch: 'main', # optional, default is set to local_branch
    # )

    # build_app(
    #   scheme: "meetlete", 
    #   configuration: 'Release'
    # )
    # Building the iOS app
    gym(
      # workspace: "./meetlete.xcworkspace",
      # include_bitcode: false,
      # include_symbols: true,
      # silent: true,
      # clean: true,
      scheme: "meetlete",
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: { 
          "com.meetlete.app" => "Meetlete app AdHoc",
          "com.meetlete.app.OneSignalNotificationServiceExtension" => "Meetlete OneSignal Development"
        }
      }
    )
#     firebase_app_distribution(
#         app: "1:664452671234:ios:1234316d004bac5bf61234",
#         testers: “dat.ngophat@hdwebsoft.co duong.pham@hdwebsoft.co”,
#         groups: “devs”,
#         release_notes: "Version Staging",
#         firebase_cli_token: "1//0gZAHFhL7VKkwCgYIARAAGBASNwF-L9IrMXI1VmkrCUBHhBVgxkeASD_Uyrv08d3lhVnxrFz2rI5MgEuPE-doF7O7u9y13vQfLDE",
#     )
  end

  desc "Upload to testflight"
  lane :testflight_release_to_app_store do |options|
   build
  end
  
  # desc "Upload to production"
  # lane :production_release_to_app_store do |options|
  #   build
  #   upload_to_app_store(
  #     skip_screenshots: true,
  #     skip_metadata: true
  #   )
  # end
end

def setupCodeSigning(keychainPassword, certificatePassword, profilePath, certificatePath)
  create_keychain(
    name: "CI",
    password: keychainPassword,
    default_keychain: true,
    unlock: true,
    timeout: 3600,
    lock_when_sleeps: false
  )
  install_provisioning_profile(path: profilePath)
  import_certificate(
    certificate_path: certificatePath,
    certificate_password: certificatePassword,
    keychain_name: "CI",
    keychain_password: keychainPassword
  )
  import_certificate(
    certificate_path: 'Certificates/Apple Development- HDWebSoft Mobile (5CAH25M52Q).p12',
    certificate_password: certificatePassword,
    keychain_name: "CI",
    keychain_password: keychainPassword
  )
  install_provisioning_profile(path: 'Certificates/Meetlete_app_Development.mobileprovision')
  install_provisioning_profile(path: 'Certificates/Meetlete_OneSignal_Development.mobileprovision')
  # install_provisioning_profile(path: 'Certificates/Meetlete_OneSignal_AdHoc.mobileprovision')
end
